" Vim Defaults and Dein Plugins {{{
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Dein and initialize
set rtp^=~/vimfiles/bundle/dein/repos/github.com/Shougo/dein.vim
let path='~/vimfiles/bundle/dein/'
call dein#begin(expand(path))

" Let Dein manage Dein
call dein#add('Shougo/dein.vim')

" Vimproc
call dein#add('Shougo/vimproc.vim')

" Fugitive
call dein#add('tpope/vim-fugitive')

" YouCompleteMe
call dein#add('Valloric/YouCompleteMe')

" CtrlP plugin 
call dein#add('kien/ctrlp.vim')

" Gundo
call dein#add('gundo')

" EMMET
call dein#add('mattn/emmet-vim')

" indentLine
Plugin 'Yggdroot/indentLine'

" UltiSnips
call dein#add('SirVer/ultisnips')

" Snippets are separated from the engine. Add this if you want them:
call dein#add('honza/vim-snippets')

" Syntastic
call dein#add('scrooloose/syntastic')

" NERDTree
call dein#add('scrooloose/nerdtree.git')

" MRU
call dein#add('mru.vim')

" Tagbar
call dein#add('majutsushi/tagbar')

" Jedi
call dein#add('davidhalter/jedi-vim')

" Flake8
call dein#add('nvie/vim-flake8')

" MatchIt
call dein#add('tmhedberg/matchit')

" Surround
call dein#add('tpope/vim-surround')

" ListToggle
call dein#add('Valloric/ListToggle')

" TComment
call dein#add('tComment')

" MatchTagAlways
call dein#add('Valloric/MatchTagAlways')

" Ag.vim
call dein#add('rking/ag.vim')

" a.vim
call dein#add('vim-scripts/a.vim')

" Auto Close Eclipse
call dein#add('Townk/vim-autoclose')

" Solarized
call dein#add('altercation/vim-colors-solarized')



" All of your Plugins must be added before the following line
call dein#end()            " required
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
"
"
" }}}

" My customizations {{{
" encoding
set encoding=utf-8

" guioptions
set guioptions=

" hidden
set hidden

"no wrap
set nowrap

" set buffer screen updates,
set lazyredraw

" highlight matching {[()]}
set showmatch

" set the ttyfast option
set ttyfast

" filetype
filetype on
" To ignore plugin indent changes, instead use:
filetype plugin on

" set the leader key
let mapleader="\\"

" highlight whitespaces in a convienent way
set list
set listchars=tab:>.,extends:#,nbsp:.
autocmd filetype xml, html, json, c, cpp, py set listchars-=tab:>.

" set the font that I want
set guifont=Consolas:h8:b:cANSI
" set guifont=Ubuntu_Mono:h10:cANSI

" Syntax highlight
syntax on
set hlsearch
set incsearch
set ignorecase
set smartcase
" nmap \q :nohlsearch<CR>
set undolevels=50

" Better c&p
set pastetoggle=<leader>p

" Line numbers and relative numbers
set number
" set relativenumber

" tcommenter map
map <leader>c <c-_><c-_>

" map multisearch
:map <silent> \m :Msearch add /<C-R>=expand("<cword>")<CR>/<Enter>
:map <silent> \mm :Msearch! delete<Enter> 

" Powerline
" Not using on windows

" Prompt for command run
map rp :VimuxPromptCommand

" Run last command executed by RunVimuxTmuxCommand
map rl :VimuxRunLastCommand

" Inspect runer pane
map ri :VimuxInspectRunner

" Close all other tmux panes in current window
map rx: :VimuxCloseRunner

" Interrupt any command running in the runner pane
map rs :VimuxInterruptRunner

" set colorscheme
colorscheme solarized 
" set background=dark
set background=light

" turn on command line completition wild style
set wildmenu

" turn on spell
set spell

" enable folding
set foldenable

" open most folds by default
set foldlevelstart=10

" 10 nested fold max
set foldnestmax=10

" fold based on indent level
set foldmethod=indent

" When the page starts to scroll, keep the cursor 8 lines from
" the top and bottom.
set scrolloff=8

" highlight cursor line
set cursorline

" Gundo
nnoremap <F5> :GundoToggle<CR>

" CtrlP - customizations
let g:ctrlp_custom_ignore = '\v\~$|\.(o|swp|pyc|wav|mp3|ogg|blend)$|(^|[/\\])\.(hg|git|bzr)($|[/\\])|__init__\.py'

" Python Checker for Syntastic
let g:syntastic_c_compiler = 'gcc'
let g:syntastic_cpp_compiler = 'g++'
let g:syntastic_python_checkers=['flake8']
let g:syntastic_c_checkers=['make', 'splint', 'gcc', 'clang_check' ]
let g:syntastic_aggregate_errors = 1
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_check_on_open=1
let g:syntastic_check_on_wq=0
let g:syntastic_enable_signs=1
let g:syntastic_error_symbol='x'
let g:syntastic_style_error_symbol='!x'
let g:syntastic_warning_symbol='w'
let g:syntastic_style_warning_symbol='!w'
" set statusline+=%#warningmsg#
" set statusline+=%{SyntasticStatuslineFlag()}
" set statusline+=%*
set statusline=%<\ %n:%f\ %m%r%y%=%-35.(line:\ %l\ of\ %L,\ col:\ %c%V\ (%P)%)

" YouCompleteMe Plugin - yum_extra_config.py path
let g:ycm_extra_conf_globlist = ['C:/Users/sboboc.ROMANIA/vimfiles/bundle/ycm/ycmd/cpp/*', '!~/*']
let g:ycm_global_ycm_extra_conf = 'C:/Users/sboboc.ROMANIA/vimfiles/bundle/ycm/ycmd/cpp/.ycm_extra_conf.py'
let g:ycm_collect_identifiers_from_tags_files = 1 " Let YCM read tags from Ctags file
let g:ycm_use_ultisnips_completer = 1 " Default 1, just ensure
let g:ycm_seed_identifiers_with_syntax = 1 " Completion for programming language's keyword
let g:ycm_complete_in_comments = 1 " Completion in comments
let g:ycm_complete_in_strings = 1 " Completion in string
" let g:ycm_show_diagnostics_ui = 0

" ctags stuff
" set autochdir
set tags=tags

" Emmet stuff
autocmd FileType djangohtml, htmldjango, html, css, js EmmetInstall

"UltiSnips
" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger="<c-j>"
let g:UltiSnipsJumpForwardTrigger="<c-j>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" The Silver Searcher
if executable('ag')
    " Use ag over grep
    " set grepprg=ag\ -i\ --nogroup\ --nocolor\
    set grepprg=ag

    " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
    let g:ctrlp_user_command = 'ag -l --nocolor --nogroup --hidden
      \ --ignore .git
      \ --ignore Manager32
      \ --ignore atm 
      \ --ignore atm16ldr 
      \ --ignore monitor 
      \ --ignore memorycard 
      \ --ignore kwScripts 
      \ --ignore keylok 
      \ --ignore mobility 
      \ --ignore modem
      \ --ignore .svn
      \ --ignore .hg
      \ --ignore .DS_Store
      \ --ignore "**/*.pyc"
      \ -g "" %s'


    " ag is gast enough that CtrlP doesn't need to cache
    let g:ctrlp_user_caching = 0
endif

" Flake8
" autocmd BufWritePost *.py call Flake8()

" dbText
let g:dbtext_default_profile_mysql_local = 'type=MYSQL:user=root:passwd=parola:dbname=dbname'

" Python / Django development
if has('autocmd')
    autocmd FileType python set sw=4
    autocmd FileType python set ts=4
    autocmd FileType python set sts=4
    autocmd FIleType python set expandtab
endif

""" AVAYA CS
set shiftwidth=4
set tabstop=4
set expandtab
set tags="D:/repo/tags"

" clean allow only good citizens (chars)
cmap <leader>r :%s/[^[:alnum:][:punct:][:space:]]//gc <CR>


" }}}

set modelines=1
" vim:foldmethod=marker:foldlevel=0
