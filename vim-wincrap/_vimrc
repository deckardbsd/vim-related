" Vim Defaults and Vundle Plugins {{{
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/vimfiles/bundle/Vundle.vim/
let path='~/vimfiles/bundle'
call vundle#begin(path)


" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" Valloric YouCompleteMe - uber plugin
Plugin 'file:///vimfiles/bundle/ycm'
" Plugin 'Valloric/YouCompleteMe'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'

" plugin from http://vim-scripts.org/vim/scripts.html
Plugin 'L9'

" CtrlP plugin 
Plugin 'kien/ctrlp.vim'

" git repos on your local machine (i.e. when working on your own plugin)
" Plugin 'file:///home/gmarik/path/to/plugin'

" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
Plugin 'rstacruz/sparkup', {'rtp': 'vim'}

" UltiSnips
Plugin 'SirVer/ultisnips'

" Snippets are separated from the engine. Add this if you want them:
Plugin 'honza/vim-snippets'

" Avoid a name conflict with L9
Plugin 'user/L9', {'name': 'newL9'}

" Syntastic
Plugin 'scrooloose/syntastic'

" GUNDO 
Plugin 'gundo'

" indentLine
Plugin 'Yggdroot/indentLine'

" EMMET
Plugin 'mattn/emmet-vim'

" Cute Python
"" Plugin 'ehamberg/vim-cute-python'

" NERDTree
Plugin 'scrooloose/nerdtree.git'

" MRU
Plugin 'mru.vim'

" Flake8
Plugin 'nvie/vim-flake8'

" MatchIt
Plugin 'tmhedberg/matchit'

" Surround
Plugin 'tpope/vim-surround'

" Tagbar
Plugin 'majutsushi/tagbar'

" TComment
Plugin 'tComment'

" VIMUX
Plugin 'benmills/vimux'

" MatchTagAlways
Plugin 'Valloric/MatchTagAlways'

" Slimux
" Plugin 'https://github.com/epeli/slimux.git'

" SLIMvo
Plugin 'https://github.com/kovisoft/slimv.git'

" Vim-Dispatch
Plugin 'tpope/vim-dispatch' 

" ListToggle
Plugin 'Valloric/ListToggle'

" " Js - Tern - you need node installed and tern(code-analysis engine) package.
" Plugin 'marijnh/tern_for_vim'
 
" CSS-color 
Plugin 'ap/vim-css-color'

" Ag.vim
Plugin 'rking/ag.vim'

" multisearch
Plugin 'vim-scripts/multisearch.vim'

" a.vim
Plugin 'vim-scripts/a.vim'

" gnu global
Plugin 'vim-scripts/gtags.vim'

" Doxygen-Toolkit
Plugin 'vim-scripts/DoxygenToolkit.vim'

" Cpp highlight
Plugin 'octol/vim-cpp-enhanced-highlight'

" Detectindent
Plugin 'ciaranm/detectindent'

" Pandoc
Plugin 'vim-pandoc/vim-pandoc'

" Autoclose
Plugin 'Townk/vim-autoclose'

" Async
Plugin 'idbrii/AsyncCommand'

""" Prodigy - true colors

" Solarized
Plugin 'altercation/vim-colors-solarized'

" Material
Plugin 'kristijanhusak/vim-hybrid-material'


" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
"
"
" }}}

" My customizations {{{

" guioptions
set guioptions=

" hidden
set hidden

"no wrap
set nowrap

" set buffer screen updates,
set lazyredraw

" highlight matching {[()]}
set showmatch

" set the ttyfast option
set ttyfast

" filetype
filetype on
filetype plugin on

" set the leader key
let mapleader="\\"

" set the font that I want
set guifont=Consolas:h9:cANSI
" set guifont=Ubuntu_Mono:h10:cANSI

" Syntax highlight
syntax on
set hlsearch
set incsearch
set ignorecase
set smartcase
" nmap \q :nohlsearch<CR>
set undolevels=50

" Better c&p
set pastetoggle=<leader>p

" Line numbers and relative numbers
set number
" set relativenumber

" tcommenter map
map <leader>c <c-_><c-_>

" map multisearch
:map <silent> \m :Msearch add /<C-R>=expand("<cword>")<CR>/<Enter>
:map <silent> \mm :Msearch! delete<Enter> 

" Powerline
" Not using on windows

" Prompt for command run
map rp :VimuxPromptCommand

" Run last command executed by RunVimuxTmuxCommand
map rl :VimuxRunLastCommand

" Inspect runer pane
map ri :VimuxInspectRunner

" Close all other tmux panes in current window
map rx: :VimuxCloseRunner

" Interrupt any command running in the runner pane
map rs :VimuxInterruptRunner

" set colorscheme
colorscheme koehler 
set background=dark

" turn on command line completition wild style
set wildmenu

" turn on spell
set spell

" enable folding
set foldenable

" open most folds by default
set foldlevelstart=10

" 10 nested fold max
set foldnestmax=10

" fold based on indent level
set foldmethod=indent

" When the page starts to scroll, keep the cursor 8 lines from
" the top and bottom.
set scrolloff=8

" highlight cursor line
set cursorline

" Gundo
nnoremap <F5> :GundoToggle<CR>

" CtrlP - customizations
let g:ctrlp_custom_ignore = '\v\~$|\.(o|swp|pyc|wav|mp3|ogg|blend)$|(^|[/\\])\.(hg|git|bzr)($|[/\\])|__init__\.py'

" Python Checker for Syntastic
let g:syntastic_c_compiler = 'gcc'
let g:syntastic_cpp_compiler = 'g++'
let g:syntastic_python_checkers=['flake8']
let g:syntastic_c_checkers=['make', 'splint', 'gcc', 'clang_check' ]
let g:syntastic_aggregate_errors = 1
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_check_on_open=1
let g:syntastic_check_on_wq=0
let g:syntastic_enable_signs=1
let g:syntastic_error_symbol='x'
let g:syntastic_style_error_symbol='!x'
let g:syntastic_warning_symbol='w'
let g:syntastic_style_warning_symbol='!w'
" set statusline+=%#warningmsg#
" set statusline+=%{SyntasticStatuslineFlag()}
" set statusline+=%*
set statusline=%<\ %n:%f\ %m%r%y%=%-35.(line:\ %l\ of\ %L,\ col:\ %c%V\ (%P)%)

" YouCompleteMe Plugin - yum_extra_config.py path
let g:ycm_extra_conf_globlist = ['/Users/sboboc.ROMANIA/vimfiles/bundle/ycm/ycmd/cpp/*', '!~/*']
let g:ycm_global_ycm_extra_conf = '/Users/sboboc.ROMANIA/vimfiles/bundle/ycm/ycmd/cpp/.ycm_extra_conf.py'
let g:ycm_collect_identifiers_from_tags_files = 1 " Let YCM read tags from Ctags file
let g:ycm_use_ultisnips_completer = 1 " Default 1, just ensure
let g:ycm_seed_identifiers_with_syntax = 1 " Completion for programming language's keyword
let g:ycm_complete_in_comments = 1 " Completion in comments
let g:ycm_complete_in_strings = 1 " Completion in string
" let g:ycm_show_diagnostics_ui = 0

" ctags stuff
" set autochdir
set tags=tags

" Emmet stuff
autocmd FileType djangohtml, htmldjango, html, css, js EmmetInstall

"UltiSnips
" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger="<c-j>"
let g:UltiSnipsJumpForwardTrigger="<c-j>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" The Silver Searcher
if executable('ag')
    " Use ag over grep
    " set grepprg=ag\ -i\ --nogroup\ --nocolor\
    set grepprg=ag

    " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
    let g:ctrlp_user_command = 'ag -l --nocolor --nogroup --hidden
      \ --ignore .git
      \ --ignore Manager32
      \ --ignore .svn
      \ --ignore .hg
      \ --ignore .DS_Store
      \ --ignore "**/*.pyc"
      \ -g "" %s'


    " ag is gast enough that CtrlP doesn't need to cache
    let g:ctrlp_user_caching = 0
endif

" Flake8
" autocmd BufWritePost *.py call Flake8()

" dbText
let g:dbtext_default_profile_mysql_local = 'type=MYSQL:user=root:passwd=parola:dbname=dbname'

" Python / Django development
autocmd FileType python set sw=4
autocmd FileType python set ts=4
autocmd FileType python set sts=4

""" AVAYA CS
set shiftwidth=4
set tabstop=4
set expandtab
set tags="D:/repo/tags"

" clean allow only good citizens (chars)
cmap <leader>r :%s/[^[:alnum:][:punct:][:space:]]//gc <CR>


" }}}

set modelines=1
" vim:foldmethod=marker:foldlevel=0
